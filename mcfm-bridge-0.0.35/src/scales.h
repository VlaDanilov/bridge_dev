#ifndef __SCALES_H
#define __SCALES_H

#include "Rtypes.h"

const int nSubProcesses = 7;

const int Nscales=7;
const int nScales=Nscales;
static const double mur[Nscales] = { 1.0, 0.5, 2.0, 1.0, 1.0, 0.5, 2.0 };
static const double muf[Nscales] = { 1.0, 1.0, 1.0, 0.5, 2.0, 0.5, 2.0 };


const double pb_fac             = 3.89379656e8 ;    // conversion GeV^2 -> pb  
const double pb_fac_Unity       = 1.0;              // unit factor


/* const int nRadius = 1; */
/* const float jetSizes[nRadius] = {0.6}; */

//const int nRadius = 6;
//const float jetSizes[nRadius] = {0.2, 0.4, 0.6, 0.8, 1.0, 1.2};

const int nRadius = 2;
const float jetSizes[nRadius] = {0.4, 0.6};
//const int nRadius = 3;
//const float jetSizes[nRadius] = {0.8, 1.0, 1.2};

//
//
//



const UInt_t nRapBins = 5;
static const Double_t rapBinsLow[ nRapBins ] =
{
//  6.0 , 8.0
  0.0, 2.0, 4.0, 6.0 , 8.0
//   6.0 
};
        
static const Double_t rapBinsHigh[ nRapBins ] =
{
//  8.0, 10.0
  2.0, 4.0, 6.0, 8.0, 10.0
//   12.0
};
                
const int nJets = 3;

const double pT_min1    = 150.00;
const double pT_min2    = 100.00;
const double pT_min3    =  50.00;
const double pT_min4    =  10.00;

const double ptMin      =  pT_min4 ;

const double etaAccept  = 3.0;                    // acceptance


//const int nEtaGrids = 5; 
/* const int netaBins = nGrids; */

/* static const float etaBins[ netaBins + 1] = */
/*   { */
/*     0.0, 0.3, 0.8, 2.8 */
/*   }; */

/* static const float etaBinsLow[ netaBins ] = */
/*   { */
/*     0.0, 0.3, 0.8, 1.2, 2.1 */
/*   }; */

/* static const float etaBinsHigh[ netaBins ] = */
/*   { */
/*     0.3, 0.8, 1.2, 2.1, 2.8 */
/*   }; */

const int nGrids = nRapBins;

//const int oGrids = 0;
//const int nGrids = 6;
//static const TString gridTag [ nGrids ] = { "pt0", "pt1", "pt2", "pt3", "pt4", "mass123"};


//
//
//   mass bins
//


const UInt_t nMassBins = 37;
const Double_t massBins[nMassBins+1] =
  {
    0., 30., 70., 110., 160., 210., 260., 310.,  370., 440., 510., 590., 670., 760., 850., 950., 1060.,
    1180., 1310., 1450., 1600., 1760., 1940., 2120., 2330., 2550., 2780., 3040., 3310., 3610., 3930., 4270.,
    4640., 5040., 5470., 5940., 6440., 7000.
  };


static const int nMassBins0 = 30;
static const double massBins0[ nMassBins0 + 1 ] =
  { 
    260, 280, 300 , 340 , 380 , 420 , 460 , 500 , 540 , 600 , 660 , 
    720 , 780 , 860 , 940 , 1020 , 1120 , 1220 , 
    1340 , 1460 , 1600 , 1760 , 1940 , 2140 , 2360 , 2600 , 
    2840 , 3100 , 3900,  5500 , 7000
  };

static const int nMassBins1 = 33;
static const double massBins1[ nMassBins1 + 1 ] =
  {
    260, 280, 300 , 340 , 380 , 420 , 460 , 500 , 540 , 600 , 
    660 , 720 , 780 , 860 , 940 , 1020 , 1120 , 1220 , 1340 , 
    1460 , 1600 , 1740 , 1900 , 2080 , 2260 , 2480 , 2720 , 
    2980 , 3260 , 3580 , 4200  , 4840 , 5500  , 7000
  };
static const int nMassBins2 = 34;
static const double massBins2[ nMassBins2 + 1 ] =
  {
    260, 280,  300 , 340 , 380 , 420 , 460 , 500 , 540 , 600 , 660 ,
    720 , 800 , 880 , 960 , 1060 , 1160 , 1260 , 1380 , 1500 , 1620 , 
    1760 , 1900 , 2060 , 2220 , 2400 , 2580 , 2780 , 2980 , 
    3200 , 3420 , 3660 , 4700 ,  5500, 7000
  };
static const int nMassBins3 = 34;
static const double massBins3[ nMassBins3 + 1 ] =
  {
    260, 280, 300 , 340 , 380 , 420 , 460 , 500 , 540 , 580 , 620 , 680 , 
    760 , 840 , 940 , 1040 , 1140 , 1260 , 1380 , 1520 , 1660 , 1800 , 1940 ,
    2100 , 2260 , 2420 , 2580 , 2760 , 2940 , 3120  , 3440, 3900 , 4660 , 5500 , 7000
  };
static const int nMassBins4 = 32;
static const double massBins4[ nMassBins4 + 1 ] =
  {
    260, 280, 300 , 340 , 380 , 420 , 460 , 500 , 540 , 580 , 620 , 660 , 700 , 
    740 , 780 , 820 , 880 , 960 , 1060 , 1180 , 1300 , 1440 , 1580 , 1740 , 1920 , 
    2120 , 2320  , 2720  , 3140  , 3580 , 4180 ,  5500 , 7000
  };

static const UInt_t nPtBins = 20;
static const Double_t ptBins[nPtBins + 1] = 
  { 
    10., 20., 30., 40., 60., 80., 110., 160.,210.,260.,310.,400.,500.,600.,800.,1000.,1200.,1500.,1800.,2500.,3500. 
  }; 

const UInt_t nptBinsUnfold = 354;
const Double_t ptBinsUnfold[nptBinsUnfold + 1] =
  {
    -50, -30,-20,-10,0,
    10 , 20 , 30 , 40 , 50 , 60 , 70 , 80 , 90 , 100 , 110 , 120 , 130 , 140 , 150 , 160 , 170 , 180 , 190 , 200 , 210 , 220 ,
    230 , 240 , 250 , 260 , 270 , 280 , 290 , 300 , 310 , 320 , 330 , 340 , 350 , 360 , 370 , 380 , 390 , 400 , 410 , 420 ,
    430 , 440 , 450 , 460 , 470 , 480 , 490 , 500 , 510 , 520 , 530 , 540 , 550 , 560 , 570 , 580 , 590 , 600 , 610 , 620 ,
    630 , 640 , 650 , 660 , 670 , 680 , 690 , 700 , 710 , 720 , 730 , 740 , 750 , 760 , 770 , 780 , 790 , 800 , 810 , 820 ,
    830 , 840 , 850 , 860 , 870 , 880 , 890 , 900 , 910 , 920 , 930 , 940 , 950 , 960 , 970 , 980 , 990 , 1000 , 1010 , 1020 ,
    1030 , 1040 , 1050 , 1060 , 1070 , 1080 , 1090 , 1100 , 1110 , 1120 , 1130 , 1140 , 1150 , 1160 , 1170 , 1180 , 1190 , 1200 , 1210 , 1220 ,
    1230 , 1240 , 1250 , 1260 , 1270 , 1280 , 1290 , 1300 , 1310 , 1320 , 1330 , 1340 , 1350 , 1360 , 1370 , 1380 , 1390 , 1400 , 1410 , 1420 ,
    1430 , 1440 , 1450 , 1460 , 1470 , 1480 , 1490 , 1500 , 1510 , 1520 , 1530 , 1540 , 1550 , 1560 , 1570 , 1580 , 1590 , 1600 , 1610 , 1620 ,
    1630 , 1640 , 1650 , 1660 , 1670 , 1680 , 1690 , 1700 , 1710 , 1720 , 1730 , 1740 , 1750 , 1760 , 1770 , 1780 , 1790 , 1800 , 1810 , 1820 ,
    1830 , 1840 , 1850 , 1860 , 1870 , 1880 , 1890 , 1900 , 1910 , 1920 , 1930 , 1940 , 1950 , 1960 , 1970 , 1980 , 1990 , 2000 , 2010 , 2020 ,
    2030 , 2040 , 2050 , 2060 , 2070 , 2080 , 2090 , 2100 , 2110 , 2120 , 2130 , 2140 , 2150 , 2160 , 2170 , 2180 , 2190 , 2200 , 2210 , 2220 ,
    2230 , 2240 , 2250 , 2260 , 2270 , 2280 , 2290 , 2300 , 2310 , 2320 , 2330 , 2340 , 2350 , 2360 , 2370 , 2380 , 2390 , 2400 , 2410 , 2420 ,
    2430 , 2440 , 2450 , 2460 , 2470 , 2480 , 2490 , 2500 , 2510 , 2520 , 2530 , 2540 , 2550 , 2560 , 2570 , 2580 , 2590 , 2600 , 2610 , 2620 ,
    2630 , 2640 , 2650 , 2660 , 2670 , 2680 , 2690 , 2700 , 2710 , 2720 , 2730 , 2740 , 2750 , 2760 , 2770 , 2780 , 2790 , 2800 , 2810 , 2820 ,
    2830 , 2840 , 2850 , 2860 , 2870 , 2880 , 2890 , 2900 , 2910 , 2920 , 2930 , 2940 , 2950 , 2960 , 2970 , 2980 , 2990 , 3000 , 3010 , 3020 ,
    3030 , 3040 , 3050 , 3060 , 3070 , 3080 , 3090 , 3100 , 3110 , 3120 , 3130 , 3140 , 3150 , 3160 , 3170 , 3180 , 3190 , 3200 , 3210 , 3220 ,
    3230 , 3240 , 3250 , 3260 , 3270 , 3280 , 3290 , 3300 , 3310 , 3320 , 3330 , 3340 , 3350 , 3360 , 3370 , 3380 , 3390 , 3400 , 3410 , 3420 ,
    3430 , 3440 , 3450 , 3460 , 3470 , 3480 , 3490 , 3500
  };

#endif // __SCALES_H
